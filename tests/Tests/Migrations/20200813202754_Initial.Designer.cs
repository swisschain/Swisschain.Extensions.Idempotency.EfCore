// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tests.Sdk.Persistence;

namespace Tests.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20200813202754_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("tests")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.id_generator_some_sequence", "'id_generator_some_sequence', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.id_generator_started_from_100", "'id_generator_started_from_100', '', '100', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.id_generator_test_entity", "'id_generator_test_entity', '', '1', '1', '', '', 'Int64', 'False'");

            modelBuilder.Entity("Swisschain.Extensions.Idempotency.EfCore.IdGeneratorEntity", b =>
                {
                    b.Property<string>("IdempotencyId")
                        .HasColumnType("text");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("IdempotencyId");

                    b.ToTable("id_generator");
                });

            modelBuilder.Entity("Swisschain.Extensions.Idempotency.EfCore.OutboxEntity", b =>
                {
                    b.Property<string>("IdempotencyId")
                        .HasColumnType("text");

                    b.Property<string>("Commands")
                        .HasColumnType("text");

                    b.Property<string>("Events")
                        .HasColumnType("text");

                    b.Property<bool>("IsDispatched")
                        .HasColumnType("boolean");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.HasKey("IdempotencyId");

                    b.ToTable("outbox");
                });

            modelBuilder.Entity("Tests.Sdk.Persistence.TestEntities.TestEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("test_entities");
                });
#pragma warning restore 612, 618
        }
    }
}
